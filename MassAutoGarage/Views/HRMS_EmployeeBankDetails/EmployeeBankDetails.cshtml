@model MassAutoGarage.Models.HRMS_EmployeeBankDetails.HRMSEmployeeBankDetailsModel

@{
    ViewBag.Title = "Employee Bank Details";
    ViewBag.pTitle = "Employee Bank Details";
    ViewBag.pageTitle = "Forms";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<style>

    .main-table {
        width: 100%;
        /*  max-width: 980px;*/
        /* change to suit*/
        margin: auto;
        border: 1px solid #4b38af;
        border-collapse: collapse;
    }

        .main-table thead th {
            background: #4b38af;
            color: #fff;
            color: #fff;
            font-size: 0.8rem;
            padding: 5px 9px 6px 9px;
            line-height: 1;
            border: 1px solid #626060;
        }

        .main-table th,
        .main-table td {
            vertical-align: top;
            text-align: left;
            border: 1px solid #626060;
        }

    td.numbers {
        text-align: center;
    }

    .main-table td {
        font-size: 13px; /* font-size: 0.7rem;*/
        padding: 3px 9px;
        border-bottom: 1px solid #999; /* dotted borders look bad on tables*/
        line-height: 1.2;
    }

    .table-heading {
        font-size: 0.7rem;
        margin: 0 0 0.5em;
    }

    .item-options {
        margin: 0 0 0.5rem;
        overflow: hidden;
        clear: both;
    }

        .item-options dt {
            margin: 0;
            font-weight: bold;
        }

        .item-options dt,
        .item-options dd {
            display: inline-block;
            margin: 0;
            padding: 0 5px 0 0;
            vertical-align: top;
        }

            .item-options dt:after {
                content: ":";
            }

    .main-table tbody tr:nth-child(odd) td {
        background: #f9f9f9;
    }

    @@media screen and (max-width: 540px) {
        table.mobile-optimised {
            word-wrap: break-word;
            font-size: 1rem;
            border: none;
        }

            table.mobile-optimised thead {
                display: none;
            }

            table.mobile-optimised td {
                display: block;
                float: left; /* ie9 and under hack */
                width: 100%;
                clear: both;
                background: #eee;
                border: none;
                padding: 10px 5px;
                box-sizing: border-box;
                font-size: 12px;
            }

            table.mobile-optimised tbody,
            table.mobile-optimised tr {
                display: block;
            }

        .mobile-optimised td:before {
            content: attr(data-th);
            display: block;
            font-weight: bold;
            margin: 0 0 2px;
            background: #19937b;
            color: #fff;
            padding: 5px;
        }

        .mobile-optimised tbody tr {
            border-bottom: 1px solid #000;
            overflow: hidden;
        }

        .item-options,
        .table-heading {
            font-size: 1rem;
        }

        .mobile-optimised .numbers {
            text-align: left;
        }

        .main-table tbody tr:nth-child(odd) td {
            background: #ccc;
        }
    }
</style>
<!-- New Dive-->
<script src="https://unpkg.com/sweetalert2@7.8.2/dist/sweetalert2.all.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-sweetalert/1.0.1/sweetalert.css" rel="stylesheet" />
@section styles{
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
}

@using (Html.BeginForm("SaveEmployeeBankDetails", "HRMS_EmployeeBankDetails", FormMethod.Post, new { enctype = "multipart/form-data", OnSubmit = "return ValidationForm()", @class = "form-validate" }))
{
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-header main-f">
                    <div class="row">
                        <div class="col-md-4 col-4"> <h5 class="card-title mb-0 gp-detail">HRMS-Employee Bank Details</h5></div>
                        <div class="col-md-4 col-4"><span style="color:#e51515"><b>@TempData["msg"]</b></span></div>
                        <div class="col-md-4 col-4">
                            <a href="@Url.Action("Index", "HRMS_EmployeeBankDetails")" class="btn btn-primary add-new" style="float:right;" tabindex="1"> <i class="fa fa-arrow-left align-middle me-1"></i>BACK TO EMPLOYEE BANK DETAILS LIST</a>
                        </div>
                    </div>
                </div>
                <!-- end card header -->
                <div class="card-body">
                    <div class="live-preview">
                        <div class="row gy-4">
                            <div class="col-xxl-4 col-md-4">
                                <div>
                                    <label for="basiInput" class="form-label">Employee Branch <code>*</code></label>
                                    @Html.HiddenFor(m => m.IdEncrypte, new { @class = "form-control" })
                                    <input type="hidden" id="hdfBranchId" value="@Model.BranchId" />
                                    @Html.DropDownListFor(x => x.BranchId, new SelectList(ViewBag.BranchList, "BranchId", "BranchName"), "- Select Branch -", new { @class = "js-example-basic-single", tabindex = 1 })
                                    @Html.ValidationMessageFor(m => m.BranchId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-xxl-4 col-md-4">
                                <div>
                                    <label for="basiInput" class="form-label">Account Number<code>*</code></label>
                                    @Html.TextBoxFor(m => m.AccountNumber, new { @class = "form-control", tabindex = 2, @onkeypress = "return isNumberKey(event);", maxlength = 15 })
                                    @Html.ValidationMessageFor(m => m.AccountNumber, null, new { @class = "field-validation-error", data_valmsg_for = "ShortName" })
                                </div>
                            </div>
                            <div class="col-xxl-4 col-md-4">
                                <div>
                                    <label for="basiInput" class="form-label">Employee Name<code>*</code></label>
                                    @Html.TextBoxFor(m => m.EmployeeName, new { @class = "form-control", tabindex = 3, @onkeypress = "return onlyAlphabets();" })
                                    @Html.ValidationMessageFor(m => m.EmployeeName, null, new { @class = "field-validation-error", data_valmsg_for = "ShortName" })
                                </div>
                            </div>
                            <div class="col-xxl-4 col-md-4">
                                <div>
                                    <label for="basiInput" class="form-label">IBAN CODE<code>*</code></label>
                                    @Html.TextBoxFor(m => m.IBANCODE, new { @class = "form-control", tabindex = 4 })
                                    @Html.ValidationMessageFor(m => m.IBANCODE, null, new { @class = "field-validation-error", data_valmsg_for = "ShortName" })
                                </div>
                            </div>
                            <div class="col-xxl-4 col-md-4">
                                <div>
                                    <label for="basiInput" class="form-label">Bank Name<code>*</code></label>
                                    @Html.TextBoxFor(m => m.BankName, new { @class = "form-control", tabindex = 5, @onkeypress = "return onlyAlphabets();" })
                                    @Html.ValidationMessageFor(m => m.BankName, null, new { @class = "field-validation-error", data_valmsg_for = "ShortName" })
                                </div>
                            </div>
                            <div class="col-xxl-4 col-md-4">
                                <div>
                                    <label for="basiInput" class="form-label">Bank Branch<code>*</code></label>
                                    @Html.TextBoxFor(m => m.BankBranch, new { @class = "form-control", tabindex = 6, @onkeypress = "return onlyAlphabets();" })
                                    @Html.ValidationMessageFor(m => m.BankBranch, null, new { @class = "field-validation-error", data_valmsg_for = "ShortName" })
                                </div>
                            </div>
                            <div class="col-xxl-4 col-md-4">
                                <div>
                                    <label for="basiInput" class="form-label">Status<code>*</code></label>
                                    <input type="hidden" id="hdfStatusId" value="@Model.StatusId" />
                                    @Html.DropDownListFor(x => x.StatusId, new SelectList(ViewBag.StatusDropdownList, "StatusId", "Status"), "- Select Status -", new { @class = "js-example-basic-single", tabindex = 7 })
                                    @Html.ValidationMessageFor(m => m.StatusId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-xxl-4 col-md-4">
                                <div>
                                    @if (Model.IdEncrypte == null || Model.IdEncrypte == "")
                                    {
                                        <button id="btnsubmit" type="submit" class="btn btn-success" style=" margin-top: 8%;">Save</button>
                                        <a href="/HRMS_EmployeeBankDetails/EmployeeBankDetails" class="btn btn-danger" style=" margin-top: 8%;">Reset</a>
                                    }
                                    else
                                    {
                                        <button id="btnsubmit" type="submit" class="btn btn-success" style=" margin-top: 8%;">Update</button>
                                        <a href="/HRMS_EmployeeBankDetails/EmployeeBankDetails" class="btn btn-danger" style=" margin-top: 8%;">Reset</a>
                                    }
                                </div>
                            </div>
                            <!--end col-->
                        </div>
                        <!--end col-->
                    </div>
                    <!--end row-->
                </div>
            </div>
        </div>
    </div>
}
<!--end col-->


@section scripts{


    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    <script src="~/assets/js/pages/select2.init.js"></script>
    <script src="~/assets/libs/prismjs/prism.js"></script>
    <script src="~/assets/js/app.js"></script>

}

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="https://unpkg.com/sweetalert2@7.8.2/dist/sweetalert2.all.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-sweetalert/1.0.1/sweetalert.css" rel="stylesheet" />

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
@*<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>*@

@*<script src="~/MyApp/HRMS_EmployeeBankDetails.js"></script>*@

<script>


    //if ($("#hdfBranchId").val() != "") {
    //    $("#BranchId").val($("#hdfBranchId").val());
    //}

    //if ($("#hdfStatusId").val() !=0) {
    //    $("#StatusId").val($("#hdfStatusId").val());
    //}




    $(document).ready(function () {

    });

    function onlyAlphabets(e, t) {
        try {
            if (window.event) {
                var charCode = window.event.keyCode;
            }
            else if (e) {
                var charCode = e.which;
            }
            else { return true; }
            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || (charCode == 32))
                return true;
            else
                return false;
        }
        catch (err) {
            alert(err.Description);
        }
    }

    function isNumberKey(evt) {

        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }


</script>

<script>


    //$("#btnsave").click(function () {

    //    debugger;
    //    var _BranchId = $("#BranchId").val();
    //    var _AccountNumber = $("#AccountNumber").val();
    //    var _EmployeeName = $("#EmployeeName").val();
    //    var _IBANCODE = $("#IBANCODE").val();
    //    var _BankName = $("#BankName").val();
    //    var _BankBranch = $("#BankBranch").val();
    //    var _StatusId = $("#StatusId").val();


    //    var ProductListArr = [];

    //    if (_BranchId != "") {


    //        var ProductList = {

    //            BranchId: _BranchId,
    //            AccountNumber: _AccountNumber,
    //            EmployeeName: _EmployeeName,
    //            IBANCODE: _IBANCODE,
    //            BankName: _BankName,
    //            BankBranch: _BankBranch,
    //            StatusId: _StatusId

    //        };
    //        ProductListArr.push(ProductList);

    //        $.ajax({
    //            type: 'POST',
    //            url: '/HRMS_EmployeeBankDetails/InsertBank',
    //            data: JSON.stringify(ProductListArr),
    //            contentType: "application/json; charset=utf-8",
    //            dataType: 'json',

    //            success: function (data) {
    //                if (data.Result == "yes") {
    //                    swal({
    //                        title: "success",
    //                        text: "Record Successfully Saved.",
    //                        type: "success",
    //                    }).then(function (isConfirm) {
    //                        if (isConfirm) {
    //                            window.location.reload();
    //                        } else {

    //                        }
    //                    });
    //                }
    //                else if (data == "yes1") {
    //                    swal({
    //                        title: "success",
    //                        text: "Record Successfully Updated.",
    //                        type: "success",
    //                    }).then(function (isConfirm) {
    //                        if (isConfirm) {
    //                            window.location.reload();
    //                        } else {

    //                        }
    //                    });
    //                }
    //                else {
    //                    swal("Warning", "Record not save!", "warning");
    //                }
    //            },

    //            error: function (httpResponse) {
    //                swal("Warning", "Something Went to Wrong!", "warning");
    //            }
    //        })

    //    }
    //    else {



    //    }
    //})

</script>

